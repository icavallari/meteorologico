 + BACKUP

     sudo -u postgres pg_dump  meteorologico > /home/aluno/base_10_06.sql

 + MODAL RAPIDO

     * chuva 				- (não implementado)

     * sentidovento 		- (não implementado)

     * altitude				-

     * temperatura 			- corrigir para ultimas 30 horas

     * umidade				- corrigir para ultimas 30 horas

     * velocidade do vento	- (não implementado)

     * rotações por minuto	- (não implementado)

     * pressão atmosférica 	- corrigir para ultimas 30 horas

     + remover id das entidades já que as alterações a serem implementadas fazem a data como chave primária

     ++ implementar modal velocidade, rotação

        alter table medicao_hora add column sentidovento_qtd int;
        alter table medicao_hora add column sentidovento_qtdmediana int;
        alter table medicao_hora add column sentidovento_qtdmoda int;

        alter table medicao_hora add column chuva_qtd int;
        alter table medicao_hora add column chuva_qtdmediana int;
        alter table medicao_hora add column chuva_qtdmoda int;

        ----

        alter table medicao_dia add column sentidovento_qtd int;
        alter table medicao_dia add column sentidovento_qtdmediana int;
        alter table medicao_dia add column sentidovento_qtdmoda int;

        alter table medicao_dia add column chuva_qtd int;
        alter table medicao_dia add column chuva_qtdmediana int;
        alter table medicao_dia add column chuva_qtdmoda int;

     ++ se a soma dos qtds não derem 60 o grafico de pizza deve informar que não houve outras variações

         select
            sentidovento, sentidovento_mediana, sentidovento_moda,
            sentidovento_qtd, sentidovento_qtdmediana, sentidovento_qtdmoda,
            chuva, chuva_mediana, chuva_moda,
                chuva_qtd, chuva_qtdmediana, chuva_qtdmoda
                from medicao_hora

     ++ inserir na tabela auxiliar de hora sempre no minuto 59 para ter as ultimas horas no modal
     ++ adicionar campo sentidovento_qtd, sentidovento_qtdmediana, sentidovento_qtdmoda
                         chuva_qtd, chuva_qtdmediana, chuva_qtdmoda na tabela medicao_hora

 +-------------------------------------------------------------------------------------------------+


 /* comandos sql uteis */
    SELECT pg_size_pretty(pg_database_size('meteorologico'));
    SELECT pg_size_pretty(pg_table_size('velocidade'))
    SELECT pg_size_pretty(pg_column_size(55.55::numeric))
    SELECT pg_size_pretty(pg_column_size(94555::int))
    SELECT pg_size_pretty(pg_column_size(555.55::float))
    ALTER TABLE altitude ALTER COLUMN valor TYPE float;

 /* executar scripts pelo painel postgres sql shell*/
    psql -U postgres -f location.sql

    /* restore */
    pg_restore -U postgres meteorologico < location

    /* backup */
    pg_dump -U postgres meteorologico > location

    /* comando para pegar os dados agrupados */
    select
    round(min(t.valor),2) as temperaturaminima, round(avg(t.valor),2) as temperaturamedia , round(max(t.valor),2) as temperaturamaxima,
    round(min(u.valor),2) as umidademinima, round(avg(u.valor),2) as umidademedia , round(max(u.valor),2) as umidademaxima,
    round(min(a.valor),2) as altitudeminima, round(avg(a.valor),2) as altitudemedia , round(max(a.valor),2) as altitudemaxima,
    round(min(r.valor),2) as rotacaominima, round(avg(r.valor),2) as rotacaomedia , round(max(r.valor),2) as rotacaomaxima,
    round(min(v.valor),2) as velocidademinima, round(avg(v.valor),2) as velocidademedia , round(max(v.valor),2) as velocidademaxima,
    round(min(p.valor),2) as pressaominima, round(avg(p.valor),2) as pressaomedia , round(max(p.valor),2) as pressaomaxima,
    max(t.data::timestamp) as data
    from temperatura t, umidade u, altitude a, rotacao r, velocidade v, pressaoatmosferica p
    where extract('day' from t.data) = 28
    group by extract('hour' from t.data) order by data asc